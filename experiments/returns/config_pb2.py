# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: config.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='config.proto',
  package='beancount.returns',
  syntax='proto2',
  serialized_pb=_b('\n\x0c\x63onfig.proto\x12\x11\x62\x65\x61ncount.returns\"r\n\x06\x43onfig\x12\x38\n\x0binvestments\x18\x01 \x01(\x0b\x32#.beancount.returns.InvestmentConfig\x12.\n\x06groups\x18\x02 \x01(\x0b\x32\x1e.beancount.returns.GroupConfig\"u\n\x10InvestmentConfig\x12\x31\n\ninvestment\x18\x01 \x03(\x0b\x32\x1d.beancount.returns.Investment\x12\x15\n\rincome_regexp\x18\x02 \x01(\t\x12\x17\n\x0f\x65xpenses_regexp\x18\x03 \x01(\t\"6\n\x0bGroupConfig\x12\'\n\x05group\x18\x01 \x03(\x0b\x32\x18.beancount.returns.Group\"\x7f\n\nInvestment\x12\x10\n\x08\x63urrency\x18\x01 \x01(\t\x12\x15\n\rasset_account\x18\x02 \x01(\t\x12\x19\n\x11\x64ividend_accounts\x18\x03 \x03(\t\x12\x16\n\x0ematch_accounts\x18\x04 \x03(\t\x12\x15\n\rcash_accounts\x18\x05 \x03(\t\";\n\x05Group\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x12\n\ninvestment\x18\x02 \x03(\t\x12\x10\n\x08\x63urrency\x18\x03 \x01(\t')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_CONFIG = _descriptor.Descriptor(
  name='Config',
  full_name='beancount.returns.Config',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='investments', full_name='beancount.returns.Config.investments', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='groups', full_name='beancount.returns.Config.groups', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=35,
  serialized_end=149,
)


_INVESTMENTCONFIG = _descriptor.Descriptor(
  name='InvestmentConfig',
  full_name='beancount.returns.InvestmentConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='investment', full_name='beancount.returns.InvestmentConfig.investment', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='income_regexp', full_name='beancount.returns.InvestmentConfig.income_regexp', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='expenses_regexp', full_name='beancount.returns.InvestmentConfig.expenses_regexp', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=151,
  serialized_end=268,
)


_GROUPCONFIG = _descriptor.Descriptor(
  name='GroupConfig',
  full_name='beancount.returns.GroupConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='group', full_name='beancount.returns.GroupConfig.group', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=270,
  serialized_end=324,
)


_INVESTMENT = _descriptor.Descriptor(
  name='Investment',
  full_name='beancount.returns.Investment',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='currency', full_name='beancount.returns.Investment.currency', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='asset_account', full_name='beancount.returns.Investment.asset_account', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dividend_accounts', full_name='beancount.returns.Investment.dividend_accounts', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_accounts', full_name='beancount.returns.Investment.match_accounts', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cash_accounts', full_name='beancount.returns.Investment.cash_accounts', index=4,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=326,
  serialized_end=453,
)


_GROUP = _descriptor.Descriptor(
  name='Group',
  full_name='beancount.returns.Group',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='beancount.returns.Group.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='investment', full_name='beancount.returns.Group.investment', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='currency', full_name='beancount.returns.Group.currency', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=455,
  serialized_end=514,
)

_CONFIG.fields_by_name['investments'].message_type = _INVESTMENTCONFIG
_CONFIG.fields_by_name['groups'].message_type = _GROUPCONFIG
_INVESTMENTCONFIG.fields_by_name['investment'].message_type = _INVESTMENT
_GROUPCONFIG.fields_by_name['group'].message_type = _GROUP
DESCRIPTOR.message_types_by_name['Config'] = _CONFIG
DESCRIPTOR.message_types_by_name['InvestmentConfig'] = _INVESTMENTCONFIG
DESCRIPTOR.message_types_by_name['GroupConfig'] = _GROUPCONFIG
DESCRIPTOR.message_types_by_name['Investment'] = _INVESTMENT
DESCRIPTOR.message_types_by_name['Group'] = _GROUP

Config = _reflection.GeneratedProtocolMessageType('Config', (_message.Message,), dict(
  DESCRIPTOR = _CONFIG,
  __module__ = 'config_pb2'
  # @@protoc_insertion_point(class_scope:beancount.returns.Config)
  ))
_sym_db.RegisterMessage(Config)

InvestmentConfig = _reflection.GeneratedProtocolMessageType('InvestmentConfig', (_message.Message,), dict(
  DESCRIPTOR = _INVESTMENTCONFIG,
  __module__ = 'config_pb2'
  # @@protoc_insertion_point(class_scope:beancount.returns.InvestmentConfig)
  ))
_sym_db.RegisterMessage(InvestmentConfig)

GroupConfig = _reflection.GeneratedProtocolMessageType('GroupConfig', (_message.Message,), dict(
  DESCRIPTOR = _GROUPCONFIG,
  __module__ = 'config_pb2'
  # @@protoc_insertion_point(class_scope:beancount.returns.GroupConfig)
  ))
_sym_db.RegisterMessage(GroupConfig)

Investment = _reflection.GeneratedProtocolMessageType('Investment', (_message.Message,), dict(
  DESCRIPTOR = _INVESTMENT,
  __module__ = 'config_pb2'
  # @@protoc_insertion_point(class_scope:beancount.returns.Investment)
  ))
_sym_db.RegisterMessage(Investment)

Group = _reflection.GeneratedProtocolMessageType('Group', (_message.Message,), dict(
  DESCRIPTOR = _GROUP,
  __module__ = 'config_pb2'
  # @@protoc_insertion_point(class_scope:beancount.returns.Group)
  ))
_sym_db.RegisterMessage(Group)


# @@protoc_insertion_point(module_scope)
