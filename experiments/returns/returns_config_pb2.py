# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: returns_config.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='returns_config.proto',
  package='beancount.returns',
  syntax='proto2',
  serialized_pb=_b('\n\x14returns_config.proto\x12\x11\x62\x65\x61ncount.returns\"B\n\x06\x43onfig\x12\x38\n\x0e\x61\x63\x63ount_config\x18\x01 \x03(\x0b\x32 .beancount.returns.AccountConfig\"\x82\x01\n\rAccountConfig\x12\x10\n\x08\x63urrency\x18\x01 \x01(\t\x12\x15\n\rasset_account\x18\x02 \x01(\t\x12\x19\n\x11\x64ividend_accounts\x18\x03 \x03(\t\x12\x16\n\x0ematch_accounts\x18\x04 \x03(\t\x12\x15\n\rcash_accounts\x18\x05 \x03(\t')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_CONFIG = _descriptor.Descriptor(
  name='Config',
  full_name='beancount.returns.Config',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='account_config', full_name='beancount.returns.Config.account_config', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=43,
  serialized_end=109,
)


_ACCOUNTCONFIG = _descriptor.Descriptor(
  name='AccountConfig',
  full_name='beancount.returns.AccountConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='currency', full_name='beancount.returns.AccountConfig.currency', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='asset_account', full_name='beancount.returns.AccountConfig.asset_account', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dividend_accounts', full_name='beancount.returns.AccountConfig.dividend_accounts', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_accounts', full_name='beancount.returns.AccountConfig.match_accounts', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cash_accounts', full_name='beancount.returns.AccountConfig.cash_accounts', index=4,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=112,
  serialized_end=242,
)

_CONFIG.fields_by_name['account_config'].message_type = _ACCOUNTCONFIG
DESCRIPTOR.message_types_by_name['Config'] = _CONFIG
DESCRIPTOR.message_types_by_name['AccountConfig'] = _ACCOUNTCONFIG

Config = _reflection.GeneratedProtocolMessageType('Config', (_message.Message,), dict(
  DESCRIPTOR = _CONFIG,
  __module__ = 'returns_config_pb2'
  # @@protoc_insertion_point(class_scope:beancount.returns.Config)
  ))
_sym_db.RegisterMessage(Config)

AccountConfig = _reflection.GeneratedProtocolMessageType('AccountConfig', (_message.Message,), dict(
  DESCRIPTOR = _ACCOUNTCONFIG,
  __module__ = 'returns_config_pb2'
  # @@protoc_insertion_point(class_scope:beancount.returns.AccountConfig)
  ))
_sym_db.RegisterMessage(AccountConfig)


# @@protoc_insertion_point(module_scope)
