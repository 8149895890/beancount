/* -*- mode: c++ -*- */
// Scanner definition for Beancount's DSL (with RE/flex).

%top{
#include "beancount/cparser/parser.h"    /* Generated by bison. */
#include "beancount/cparser/location.h"  /* Generated by bison %locations. */

#include <utility>
#include <cassert>

#include "reflex/matcher.h"
#include "absl/strings/string_view.h"

namespace beancount {

// Using declarations for symbols in the scanner implementation only.
using absl::string_view;
using beancount::parser::Parser;
using std::endl;
using std::string;

inline strview view(const reflex::Matcher& m) {
  return strview(m.begin(), m.size());
}

}  // namespace beancount
}

//- Definitions ---------------------------------------------------------------
%option bison-complete
%option bison-cc-namespace=beancount::parser
%option bison-cc-parser=Parser
%option bison-locations

// Throw an exception in the scanner's default rule.
%option exception="beancount::parser::Parser::syntax_error(location(), \"Unknown token.\")"

%option namespace=beancount::scanner
%option lexer=Scanner

%option tabs=8
%option fast
%option unicode
%option indent
%option nodefault

// TODO(blais): Update patterns here.
// Regexp patterns.
type	[a-z]+
ident	[a-zA-Z0-9_-]+
punct	[();:.]
comment	(#+|;;+)

//- Rules ---------------------------------------------------------------------
%%

// TODO(blais): Insert rules here.

%%

//-----------------------------------------------------------------------------
// Code: Scanner Body
